!function a(
        b,
        c,
        d) {
    function e(
            g,
            h) {
        if (!c[g]) {
            if (!b[g]) {
                var i = "function" == typeof require && require;
                if (!h && i) return i(
                            g,
                            !0);
                if (f) return f(
                            g,
                            !0);
                throw new Error(
                        "Cannot find module '" + g + "'")
            }
            var j = c[g] = {exports: {}};
            b[g][0].call(
                    j.exports,
                    function (
                            a) {
                        var c = b[g][1][a];
                        return e(c
                                ? c : a)
                    },
                    j,
                    j.exports,
                    a,
                    b,
                    c,
                    d)
        }
        return c[g].exports
    }
    for (var f = "function" == typeof require && require, g = 0; g < d.length;
            g++) e(
                        d[g]);
    return e
}(
        {1: [function (
                        a) {
                    "use strict";
                    window.onload = function () {
                        var b = new Phaser.Game(
                                320,
                                512,
                                Phaser.AUTO,
                                "ludumdare29");
                        b.state.add(
                                "boot",
                                a(
                                        "./states/boot")), b.state.add(
                                "gameover",
                                a(
                                        "./states/gameover")), b.state.add(
                                "menu",
                                a(
                                        "./states/menu")), b.state.add(
                                "play",
                                a(
                                        "./states/play")), b.state.add(
                                "preload",
                                a(
                                        "./states/preload")), b.state.start(
                                "boot")
                    }
                }, {"./states/boot": 9, "./states/gameover": 10, "./states/menu": 11, "./states/play": 12, "./states/preload": 13}], 2: [function (
                        a,
                        b) {
                    "use strict";
                    var c = function (
                            a,
                            b,
                            c,
                            e,
                            f) {
                        Phaser.Sprite.call(
                                this,
                                a,
                                b,
                                c,
                                "images"), this.leftFace = e, this.topFace = f, this.rightFace = a.rnd.integerInRange(
                                0,
                                1), this.bottomFace = a.rnd.integerInRange(
                                0,
                                1), this.frameName = "tileset_dirt000" + d(
                                this,
                                this.leftFace,
                                this.topFace,
                                this.rightFace,
                                this.bottomFace) + ".png", this.smoothed = !1, this.scale.x = 2, this.scale.y = 2, this.anchor.setTo(
                                .5,
                                .5), this.x += this.width / 2, this.y += this.height / 2
                    };
                    c.prototype = Object.create(
                            Phaser.Sprite.prototype), c.prototype.constructor = c;
                    var d = function (
                            a,
                            b,
                            c,
                            d,
                            e) {
                        var f = 1e3 * b + 100 * c + 10 * d + e, g = b + c + d + e, h = 0;
                        return 2 !== g ? (h = g, 1 === f && (a.angle = 180), 10 === f && (a.angle = 90), 1e3 === f && (a.angle = 270), 1011 === f && (a.angle = 90), 1101 === f && (a.angle = 180), 1110 === f && (a.angle = 270)) : 11 === f ? (h = 2, a.angle = 90) : 110 === f ? h = 2 : 101 === f ? h = 5 : 1100 === f ? (h = 2, a.angle = 270) : 1010 === f ? (h = 5, a.angle = 90) : (h = 2, a.angle = 180), h
                    };
                    b.exports = c
                }, {}], 3: [function (
                        a,
                        b) {
                    "use strict";
                    var c = 450, d = 100, e = 200, f = 300, g = 50, h = 100, i = .1, j = 100, k = 100, l = 200, m = 300, n = 50, o = .5, p = .75, q = function (
                            a,
                            b,
                            c,
                            e) {
                        Phaser.Sprite.call(
                                this,
                                a,
                                b,
                                c,
                                "images",
                                e), this.smoothed = !1, this.scale.x = 2, this.scale.y = 2, this.anchor.setTo(
                                .5,
                                .5), this.game.physics.arcade.enableBody(
                                this), this.body.setSize(
                                12,
                                14,
                                0,
                                12), this.cursors = a.input.keyboard.createCursorKeys(), this.baseY = this.y, this.animations.add(
                                "drill",
                                Phaser.Animation.generateFrameNames(
                                        "drilling",
                                        0,
                                        2,
                                        ".png",
                                        4),
                                12,
                                !0), this.animations.add(
                                "power",
                                Phaser.Animation.generateFrameNames(
                                        "drilling",
                                        3,
                                        5,
                                        ".png",
                                        4),
                                24,
                                !0), this.animations.add(
                                "overheat",
                                Phaser.Animation.generateFrameNames(
                                        "drilling",
                                        6,
                                        9,
                                        ".png",
                                        4),
                                2,
                                !1), this.animations.play(
                                "drill"), this.powertimer = 0, this.body.velocity.y = d, this.health = h, this.controllable = !0, this.slowed = !1, this.dead = !1, this.boost = 0, this.boosting = !1
                    };
                    q.prototype = Object.create(
                            Phaser.Sprite.prototype), q.prototype.constructor = q, q.prototype.update = function () {
                        this.dead || (!this.slowed && this.boost < n && (this.boost += o), this.body.velocity.x = 0, (this.cursors.left.isDown || this.game.input.pointer1.isDown && this.game.input.pointer1.screenX < this.game.width / 2) && this.controllable && (this.body.velocity.x = this.powertimer > 0 ? -l : -k), (this.cursors.right.isDown || this.game.input.pointer1.isDown && this.game.input.pointer1.screenX >= this.game.width / 2) && this.controllable && (this.body.velocity.x = this.powertimer > 0 ? l : k), this.body.velocity.x < 0 && this.angle < 22.5 ? this.body.angularVelocity = 200 : this.body.velocity.x > 0 && this.angle > -22.5 ? this.body.angularVelocity = -200 : 0 != this.angle && (this.angle < 0 ? this.body.angularVelocity = 50 : this.angle > 0 && (this.body.angularVelocity = -50)), !this.slowed && this.health < j && (this.health += i), this.powertimer > 0 ? (this.powertimer--, 0 === this.powertimer && (this.animations.play(
                                "drill"), this.body.velocity.y = d), this.boosting = !1) : false && this.boost > 0 ? (this.body.velocity.y = e, this.boost -= p, this.boosting = !0) : this.slowed ? (this.body.velocity.y = g, this.slowed = !1, this.boosting = !1) : (this.body.velocity.y = d, this.boosting = !1), this.x < 0 && (this.x = 0), this.x > 320 && (this.x = 320))
                    }, q.prototype.powerup = function () {
                        this.animations.play(
                                "power"), this.powertimer = c, this.body.velocity.y = f
                    }, q.prototype.hitRock = function (
                            a) {
                        this.slowed = !0, !this.powertimer > 0 && !this.boosting && (this.health = 50)
                    }, q.prototype.updateSpeed = function (
                            a) {
                        d += a, d > m ? d = m : f += 2 * a
                    }, q.prototype.maxHealth = function () {
                        return h
                    }, q.prototype.maxBoost = function () {
                        return n
                    }, q.prototype.playDead = function () {
                        this.body.velocity.x = 0, this.body.velocity.y = 0, this.body.angularVelocity = 0, this.controllable = !1, this.animations.play(
                                "overheat"), this.dead = !0
                    }, b.exports = q
                }, {}], 4: [function (
                        a,
                        b) {
                    "use strict";
                    var c = function (
                            a,
                            b,
                            c) {
                        Phaser.Sprite.call(
                                this,
                                a,
                                b,
                                c,
                                "images"), this.frameName = "carrot.png", this.smoothed = !1, this.scale.x = 2, this.scale.y = 2, this.anchor.setTo(
                                .5,
                                .5), this.game.physics.arcade.enableBody(
                                this), this.body.setSize(
                                6,
                                6,
                                0,
                                0), this.body.rotation = a.rnd.realInRange(
                                -180,
                                180), this.lifespan = 15e3
                    };
                    c.prototype = Object.create(
                            Phaser.Sprite.prototype), c.prototype.constructor = c, b.exports = c
                }, {}], 5: [function (
                        a,
                        b) {
                    "use strict";
                    var c = function (
                            a,
                            b,
                            c,
                            d) {
                        Phaser.Sprite.call(
                                this,
                                a,
                                b,
                                c,
                                "images"), this.frameName = d, this.smoothed = !1, this.scale.x = this.scale.y = 2, this.anchor.setTo(
                                .5,
                                .5), a.add.existing(
                                this), this.needle = a.add.sprite(
                                b,
                                c,
                                "images"), this.needle.frameName = "gauge_needle.png", this.needle.smoothed = !1, this.needle.scale.x = this.needle.scale.y = 2, this.needle.anchor.setTo(
                                .5,
                                .5), this.minAngle = -90, this.maxAngle = 90, this.range = this.maxAngle - this.minAngle, this.needle.angle = this.maxAngle, this.fixedToCamera = !0, this.needle.fixedToCamera = !0
                    };
                    c.prototype = Object.create(
                            Phaser.Sprite.prototype), c.prototype.constructor = c, c.prototype.update = function () {}, c.prototype.updateNeedle = function (
                            a,
                            b,
                            c) {
                        this.needle.angle = c > b ? a > c ? this.maxAngle : b > a ? this.minAngle : (a - b) / (c - b) * this.range + this.minAngle : a > b ? this.minAngle : c > a ? this.maxAngle : (a - b) / (c - b) * this.range + this.minAngle
                    }, b.exports = c
                }, {}], 6: [function (
                        a,
                        b) {
                    "use strict";
                    var c = [1 * 8, 2 * 8, 3 * 8, 4 * 8, 5 * 8, 6 * 8, 7 * 8, 8 * 8, 9 * 8, 10 * 8], d = function (
                            a,
                            b,
                            c) {
                        Phaser.Sprite.call(
                                this,
                                a,
                                b,
                                c,
                                "images"), this.gemValue = this.game.rnd.integerInRange(
                                0,
                                9), this.frameName = "gems000" + this.gemValue + ".png", this.smoothed = !1, this.scale.x = 2, this.scale.y = 2, this.anchor.setTo(
                                .5,
                                .5), this.game.physics.arcade.enableBody(
                                this), this.body.setSize(
                                8,
                                8,
                                0,
                                0), this.body.rotation = a.rnd.realInRange(
                                -180,
                                180), this.lifespan = 15e3
                    };
                    d.prototype = Object.create(
                            Phaser.Sprite.prototype), d.prototype.constructor = d, d.prototype.value = function () {
                        return c[this.gemValue]
                    }, b.exports = d
                }, {}], 7: [function (
                        a,
                        b) {
                    "use strict";
                    var c = function (
                            a,
                            b,
                            c) {
                        Phaser.Sprite.call(
                                this,
                                a,
                                b,
                                c,
                                "images"), this.smoothed = !1, this.scale.x = this.scale.y = a.rnd.realInRange(
                                2,
                                4), this.anchor.setTo(
                                .5,
                                .5), this.game.physics.arcade.enableBody(
                                this), this.body.setSize(
                                25,
                                25,
                                0,
                                0), this.body.rotation = a.rnd.realInRange(
                                -180,
                                180), this.animations.add(
                                "lava",
                                [37, 38, 39],
                                1,
                                !0), this.animations.play(
                                "lava"), this.lifespan = 15e3
                    };
                    c.prototype = Object.create(
                            Phaser.Sprite.prototype), c.prototype.constructor = c, b.exports = c
                }, {}], 8: [function (
                        a,
                        b) {
                    "use strict";
                    var c = .25, d = .25, e = function (
                            a,
                            b,
                            e) {
                        Phaser.Sprite.call(
                                this,
                                a,
                                b,
                                e,
                                "images",
                                0), this.large = a.rnd.realInRange(
                                0,
                                1) < d, this.tough = a.rnd.realInRange(
                                0,
                                1) < c, this.frameName = this.large ? this.tough ? "rocks_lg0001.png" : "rocks_lg0000.png" : this.tough ? "rocks_sm0001.png" : "rocks_sm0000.png", this.smoothed = !1, this.scale.x = this.scale.y = a.rnd.realInRange(
                                2,
                                4), this.anchor.setTo(
                                .5,
                                .5), this.game.physics.arcade.enableBody(
                                this), this.large ? this.body.setSize(
                                48,
                                48,
                                -4,
                                -6) : this.body.setSize(
                                24,
                                24,
                                -4,
                                -6), this.body.rotation = a.rnd.realInRange(
                                -180,
                                180), this.lifespan = 15e3
                    };
                    e.prototype = Object.create(
                            Phaser.Sprite.prototype), e.prototype.constructor = e, b.exports = e
                }, {}], 9: [function (
                        a,
                        b) {
                    "use strict";
                    function c() {}
                    c.prototype = {preload: function () {
                            this.load.image(
                                    "preloader",
                                    "assets/preloader.png")
                        }, create: function () {
                            this.game.input.maxPointers = 1, this.game.state.start(
                                    "preload")
                        }}, b.exports = c
                }, {}], 10: [function (
                        a,
                        b) {
                    "use strict";
                    function c() {}
                    c.prototype = {preload: function () {}, create: function () {
                            var a = {font: "65px Arial", fill: "#ffffff", align: "center"};
                            this.titleText = this.game.add.text(
                                    this.game.world.centerX,
                                    100,
                                    "Game Over!",
                                    a), this.titleText.anchor.setTo(
                                    .5,
                                    .5), this.congratsText = this.game.add.text(
                                    this.game.world.centerX,
                                    200,
                                    "You Win!",
                                    {font: "32px Arial", fill: "#ffffff", align: "center"}), this.congratsText.anchor.setTo(
                                    .5,
                                    .5), this.instructionText = this.game.add.text(
                                    this.game.world.centerX,
                                    300,
                                    "Click To Play Again",
                                    {font: "16px Arial", fill: "#ffffff", align: "center"}), this.instructionText.anchor.setTo(
                                    .5,
                                    .5)
                        }, update: function () {
                            this.game.input.activePointer.justPressed() && this.game.state.start(
                                    "play")
                        }}, b.exports = c
                }, {}], 11: [function (
                        a,
                        b) {
                    "use strict";
                    function c() {}
                    var d = a(
                            "../prefabs/Bunny.js");
                    c.prototype = {create: function () {
                            this.game.stage.backgroundColor = "#5FB0F3";
                            var a = window.navigator.userLanguage || window.navigator.language;
                            a = a.substring(
                                    0,
                                    2);
                            var b = !1;
                            /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(
                                    navigator.userAgent) && (b = !0);
                            var c = "", e = "", f = !1;
                            "zh" === a ? (c = "DRILL\nBUNNY", e = "Press Space!") : 
                                    "es" === a ? (c = "Conejito de\nPerforaci�n", e = "Presione Inicio", f = !0) : 
                                    "fr" === a ? (c = "FORAGE\nLAPIN", e = "Espace Presse", f = !0) : 
                                    "de" === a ? (c = "BOHRER\nHASE", e = "Presseraum", f = !0) : 
                                    "it" === a ? (c = "TRAPANO\nCONIGLIO", e = "Spazio Stampa", f = !0) : 
                                    "ja" === a ? (c = "??????", e = "?????", f = !0) : 
                                    (c = "DRILL\nBUNNY", e = "Press Space!"), b && (e = "Tap To Start!"), this.bg = this.game.add.sprite(
                                    0,
                                    216,
                                    "images"), this.bg.frameName = "titlescreen.png", this.bg.smoothed = !1, this.bg.scale.x = 2, this.bg.scale.y = 2;
                            for (var g = [25, 50, 75], h = [240, 300, 360], i = 0;
                                    3 > i;
                                    i++) {
                                var j = this.game.add.sprite(
                                        g.splice(
                                                this.game.rnd.integerInRange(
                                                        0,
                                                        g.length - 1),
                                                1),
                                        h.splice(
                                                this.game.rnd.integerInRange(
                                                        0,
                                                        h.length - 1),
                                                1),
                                        "images");
                                j.frameName = "apple.png", j.smoothed = !1, j.scale.x = 2, j.scale.y = 2, j.anchor.setTo(
                                        .5,
                                        .25), j.angle = this.game.rnd.pick(
                                        [-45, 45]), this.game.add.tween(
                                        j).
                                        to(
                                                {angle: j.angle < 0 ? 45 : -45},
                                                2e3,
                                                Phaser.Easing.Quadratic.InOut,
                                                !0,
                                                0,
                                                Number.MAX_VALUE,
                                                !0);
                                var k = this.game.add.sprite(
                                        this.game.rnd.integerInRange(
                                                this.game.width / 2 + 16,
                                                this.game.width),
                                        this.game.height - 65,
                                        "images");
                                k.frameName = "eaten.png", k.smoothed = !1, k.anchor.setTo(
                                        .5,
                                        .5), k.angle = this.game.rnd.integerInRange(
                                        -180,
                                        180)
                            }
                            
                            this.clouds = this.game.add.sprite(
                                    0,
                                    24,
                                    "images"), this.clouds.frameName = "clouds.png", this.clouds.smoothed = !1, this.clouds.scale.x = 2, this.clouds.scale.y = 2, this.bun = this.game.add.sprite(
                                    32,
                                    this.game.height - 102,
                                    "images"), this.bun.smoothed = !1, this.bun.scale.x = 2, this.bun.scale.y = 2, this.bun.animations.add(
                                    "sleep",
                                    Phaser.Animation.generateFrameNames(
                                            "chacket",
                                            0,
                                            1,
                                            ".png",
                                            4),
                                    1,
                                    !0), this.bun.animations.add(
                                    "wake",
                                    Phaser.Animation.generateFrameNames(
                                            "chacket",
                                            2,
                                            2,
                                            ".png",
                                            4),
                                    1,
                                    !0), this.bun.animations.add(
                                    "walk",
                                    Phaser.Animation.generateFrameNames(
                                            "chacket",
                                            3,
                                            4,
                                            ".png",
                                            4),
                                    12,
                                    !0), this.bun.animations.play(
                                    "sleep"), this.drill = this.game.add.sprite(
                                    146,
                                    this.game.height - 82,
                                    "images"), this.drill.frameName = "titledrill.png", this.drill.smoothed = !1, this.drill.scale.x = 2, this.drill.scale.y = 2, this.bunny = new d(
                                    this.game,
                                    32,
                                    64), this.game.add.existing(
                                    this.bunny), this.bunny.x = 160, this.bunny.y = 442, this.bunny.controllable = !1, this.bunny.kill(), this.ground = this.game.add.sprite(
                                    0,
                                    this.game.height - 64,
                                    "images"), this.ground.frameName = "ground.png", this.ground.smoothed = !1, this.ground.scale.x = 2, this.ground.scale.y = 2, this.title = this.game.add.text(
                                    8,
                                    8,
                                    "Chacket\nValleyparker:",
                                    {fill: "red"}), this.title.font = "Press Start 2P", this.title.fontSize = 24, this.title.align = "center", this.sub = this.game.add.text(
                                    4,
                                    64,
                                    c + "\n "), this.sub.font = "Press Start 2P", this.sub.fontSize = f ? 18 : 64, this.sub.x = (this.game.width - this.sub.width) / 2, "en" === a && (this.sub.x = 4), this.press = this.game.add.text(
                                    0,
                                    this.game.height - 32,
                                    e), this.press.font = "Press Start 2P", this.press.fontSize = 24, this.press.x = (this.game.width - this.press.width) / 2, this.game.add.tween(
                                    this.title).
                                    to(
                                            {y: this.title.y + 16},
                                            2e3,
                                            Phaser.Easing.Quadratic.InOut,
                                            !0,
                                            0,
                                            Number.MAX_VALUE,
                                            !0), this.game.add.tween(
                                    this.sub).
                                    to(
                                            {y: this.sub.y + 16},
                                            2e3,
                                            Phaser.Easing.Quadratic.InOut,
                                            !0,
                                            0,
                                            Number.MAX_VALUE,
                                            !0), this.start = this.game.input.keyboard.addKey(
                                    Phaser.Keyboard.SPACEBAR), this.starting = !1, this.timer = 0, this.jumping = !1, this.phase = !1, this.fade = this.game.add.bitmapData(
                                    this.game.width,
                                    this.game.height), this.fade.context.fillStyle = "#000000", this.fade.context.fillRect(
                                    0,
                                    0,
                                    this.game.width,
                                    this.game.height), this.fadesprite = this.game.add.sprite(
                                    0,
                                    0,
                                    this.fade), this.fadesprite.alpha = .99, this.game.add.tween(
                                    this.fadesprite).
                                    to(
                                            {alpha: 0},
                                            250,
                                            null,
                                            !0), this.fading = !1, this.sfx = this.game.add.sound(
                                    "atlas"), this.sfx.addMarker(
                                    "double",
                                    270.023,
                                    117.33,
                                    1,
                                    !1), this.sfx.addMarker(
                                    "jump",
                                    1.602,
                                    .35,
                                    1,
                                    !1), this.sfx.addMarker(
                                    "wind",
                                    455.128,
                                    23.17,
                                    1,
                                    !0), this.sfx.play(
                                    "double"), this.game.time.events.add(
                                    117330,
                                    function () {
                                        this.sfx.play(
                                                "wind")
                                    },
                                    this)
                        }, update: function () {
                            this.clouds.x -= .5, this.clouds.x < -this.clouds.width && (this.clouds.x = this.game.width), this.starting && this.timer++, 5 === this.timer && (this.bun.y += 4), this.timer > 25 && !this.jumping && (this.bun.animations.play(
                                    "walk"), this.game.add.tween(
                                    this.bun).
                                    to(
                                            {x: 146},
                                            1e3,
                                            Phaser.Easing.Quadratic.InOut,
                                            !0), this.jumping = !0), this.timer > 40 && !this.phase && (this.game.add.tween(
                                    this.bun).
                                    to(
                                            {y: 320},
                                            350,
                                            Phaser.Easing.Quadratic.InOut,
                                            !0,
                                            0,
                                            1,
                                            !0), this.sfx.play(
                                    "jump"), this.bun.animations.stop(), this.phase = !0), 146 == this.bun.x && 410 == this.bun.y && (this.bun.destroy(), this.drill.destroy(), this.bunny.revive()), this.bunny.y > this.game.height && !this.fading && (this.fading = !0, this.game.add.tween(
                                    this.fadesprite).
                                    to(
                                            {alpha: 1},
                                            250,
                                            null,
                                            !0), this.game.add.tween(
                                    this.sfx).
                                    to(
                                            {volume: 0},
                                            250,
                                            null,
                                            !0).onComplete.add(
                                    this.playScene,
                                    this)), !this.start.isDown && !this.game.input.pointer1.isDown || this.starting || (this.bun.animations.play(
                                    "wake"), this.bun.y -= 4, this.starting = !0)
                        }, playScene: function () {
                            this.sfx.removeMarker(
                                    "double"), this.sfx.removeMarker(
                                    "jump"), this.sfx.removeMarker(
                                    "wind"), this.sfx.stop(), this.game.state.start(
                                    "play")
                        }}, b.exports = c
                }, {"../prefabs/Bunny.js": 3}], 12: [function (
                        a,
                        b) {
                    "use strict";
                    function c() {}
                    var d = 5, e = .5, f = 4, g = .5, h = 1, i = .25, j = 2, k = .1, l = 1.5, m = .5, n = 1, o = 2.5, p = a(
                            "../prefabs/Block.js"), q = a(
                            "../prefabs/Bunny.js"), r = a(
                            "../prefabs/Gem.js"), s = a(
                            "../prefabs/Rock.js"), t = a(
                            "../prefabs/Carrot.js"), u = a(
                            "../prefabs/Lava.js"), v = a(
                            "../prefabs/Gauge.js");
                    c.prototype = {create: function () {
                            
                            this.countdown = 180;
                            this.countdowntext = null;
                            
                            this.game.time.events.loop(
                                        1000, 
                                        function () {
                                            this.countdown -= 1;
                                            this.countdowntext.text = this.countdown + "s";

                                        },
                                        this);
                            
                            this.game.physics.startSystem(
                                    Phaser.Physics.ARCADE), this.game.stage.backgroundColor = "#000", 
                                    this.cash = 0, this.chunkGroup = this.game.add.group(), 
                                    this.nextChunkY = 0, this.game.world.bounds.x = 0, 
                                    this.game.world.bounds.height = 1024, this.game.camera.setBoundsToWorld(), 
                                    this.lastChunkIndex = 0, this.tephra = this.game.add.group(), 
                                    this.rocks = this.game.add.group(), this.gems = this.game.add.group(), 
                                    this.carrots = this.game.add.group(), this.lastChunk = null, 
                                    this.chunkIndex = 0, this.generateChunk(), this.generateChunk(), 
                                    this.dirtEmitter = this.game.add.emitter(
                                    32,
                                    64,
                                    500), this.dirtEmitter.makeParticles(
                                    "images",
                                    [40, 41, 42, 43],
                                    500,
                                    !1,
                                    !1), this.dirtEmitter.setYSpeed(
                                    -5,
                                    200), this.dirtEmitter.setRotation(
                                    0,
                                    0), this.dirtEmitter.start(
                                    !1,
                                    500,
                                    25), this.drilldirt = this.game.add.sprite(
                                    32,
                                    64,
                                    "images"), this.drilldirt.smoothed = !1, this.drilldirt.scale.x = 2, 
                                            this.drilldirt.scale.y = 2, this.drilldirt.anchor.setTo(
                                    .5,
                                    -.1), this.drilldirt.animations.add(
                                    "drill",
                                    Phaser.Animation.generateFrameNames(
                                            "drilldirt",
                                            0,
                                            1,
                                            ".png",
                                            4),
                                    16,
                                    !0), this.drilldirt.animations.play(
                                    "drill"), this.tunnel = this.game.add.emitter(
                                    32,
                                    64,
                                    100), this.tunnel.makeParticles(
                                    "images",
                                    48,
                                    100,
                                    !1,
                                    !1), this.tunnel.setXSpeed(
                                    0,
                                    0), this.tunnel.setYSpeed(
                                    0,
                                    0), this.tunnel.gravity = 0, this.tunnel.start(
                                    !1,
                                    2e3,
                                    25), this.tunnelborder = this.game.add.emitter(
                                    32,
                                    64,
                                    200), this.tunnelborder.makeParticles(
                                    "images",
                                    [45, 46, 47],
                                    200,
                                    !1,
                                    !1), this.tunnelborder.setXSpeed(
                                    0,
                                    0), this.tunnelborder.setYSpeed(
                                    0,
                                    0), this.tunnelborder.setRotation(
                                    0,
                                    0), this.tunnelborder.gravity = 0, this.tunnelborder.start(
                                    !1,
                                    2e3,
                                    15), this.deathfade = this.game.add.bitmapData(
                                    this.game.width,
                                    this.game.height), this.deathfade.context.fillStyle = "#000000", this.deathfade.context.fillRect(
                                    0,
                                    0,
                                    this.game.width,
                                    this.game.height), 
                                    this.deathfadesprite = this.game.add.sprite(
                                    0,
                                    0,
                                    this.deathfade), 
                                    this.deathfadesprite.fixedToCamera = !0, 
                                    this.deathfadesprite.alpha = 0, 
                                    this.deathfadesprite.kill(), 
                                    this.circle = this.game.add.sprite(
                                    0,
                                    0,
                                    "images"), this.circle.frameName = "circle.png", this.circle.alpha = .5, this.circle.anchor.setTo(
                                    .5,
                                    .5), this.circle.kill(), 
                                    this.bunny = new q(
                                    this.game,
                                    0,
                                    0), 
                                    this.bunny.x = this.game.width / 2, this.bunny.y = -this.bunny.height, this.game.add.existing(
                                    this.bunny), this.getEmitter = this.game.add.emitter(), this.getEmitter.makeParticles(
                                    "images",
                                    44), this.getEmitter.gravity = 0, this.getEmitter.setAlpha(
                                    0,
                                    1), this.getEmitter.setXSpeed(
                                    -25,
                                    25), this.getEmitter.setYSpeed(
                                    -25,
                                    25), this.getEmitter.bounce.set(
                                    .5,
                                    .5), this.game.camera.follow(
                                    this.bunny), this.game.camera.deadzone = new Phaser.Rectangle(
                                    0,
                                    0,
                                    320,
                                    128), this.fade = this.game.add.bitmapData(
                                    this.game.width,
                                    this.game.height), this.fade.context.fillStyle = "#000000", this.fade.context.fillRect(
                                    0,
                                    0,
                                    this.game.width,
                                    this.game.height), this.fadesprite = this.game.add.sprite(
                                    0,
                                    0,
                                    this.fade), this.fadesprite.alpha = 1, 
                                    this.game.add.tween(
                                    this.fadesprite).
                                    to(
                                            {alpha: 0},
                                            400,
                                            null,
                                            !0), 
                                    this.dead = !1, this.beeping = !1, this.sfx = this.game.sound.add(
                                    "atlas"), this.sfx.addMarker(
                                    "coral",
                                    2.083,
                                    267.84,
                                    1,
                                    !0), this.sfx.addMarker(
                                    "carrot",
                                    .704,
                                    .535,
                                    1,
                                    !1), this.sfx.addMarker(
                                    "gem",
                                    1.252,
                                    .34,
                                    1,
                                    !1), this.sfx.addMarker(
                                    "ouch",
                                    1.968,
                                    .1,
                                    1,
                                    !1), this.sfx.addMarker(
                                    "beep",
                                    0,
                                    .15,
                                    1,
                                    !1), this.sfx.addMarker(
                                    "gameover",
                                    387.365,
                                    67.752,
                                    !0), this.sfx.addMarker(
                                    "boom",
                                    .162,
                                    .535,
                                    !1), this.sfx.play(
                                    "coral"), 
 
                                    this.cashtext = this.game.add.text(
                                    10,
                                    this.game.height - 24,
                                    "0 Gold",
                                    {fill: "white"}), 

                                    this.cashtext.font = "Press Start 2P", 
                                    this.cashtext.fontSize = 18, 
                                    this.cashtext.fixedToCamera = !0
                            ,
                                    
                                    this.countdowntext = this.game.add.text(
                                    10,
                                    10,
                                    "180s",
                                    {fill: "white"}), 
                                    this.countdowntext.font = "Press Start 2P", 
                                    this.countdowntext.fontSize = 18, 
                                    this.countdowntext.fixedToCamera = !0
                        }, update: function () {
                            
                            if(this.countdown == 0 || this.countdown < 0){
//                                this.dead = !0;
                                this.bunny.health = -1;
                            }
                            
                            if (!this.dead) {
                                
//                                this.countdowntext = this.countdown + "s";
                                
                                this.game.physics.arcade.overlap(
                                        this.bunny,
                                        this.gems,
                                        this.collectGems,
                                        null,
                                        this), this.game.physics.arcade.overlap(
                                        this.bunny,
                                        this.carrots,
                                        this.collectCarrot,
                                        null,
                                        this), this.game.physics.arcade.overlap(
                                        this.bunny,
                                        this.rocks,
                                        this.hitRock,
                                        null,
                                        this), this.game.physics.arcade.overlap(
                                        this.bunny,
                                        this.tephra,
                                        this.hitLava,
                                        null,
                                        this), this.bunny.y > this.chunkGroup.children[this.chunkGroup.children.length - 1].y && this.generateChunk();
                                for (var a = this.chunkGroup.children.length;
                                        a >= 0; ) 
                                    this.chunkGroup.children[a] && this.chunkGroup.children[a].y < this.game.camera.y - 512 && this.chunkGroup.remove(
                                            this.chunkGroup.children[a],
                                            !1), a--;
                                this.dirtEmitter.emitX = this.bunny.x, this.dirtEmitter.emitY = this.bunny.y + 24, this.drilldirt.x = this.bunny.x, this.drilldirt.y = this.bunny.y, this.drilldirt.angle = this.bunny.angle, this.tunnel.emitX = this.bunny.x, this.tunnel.emitY = this.bunny.y, this.tunnel.setRotation(
                                        this.bunny.angle,
                                        this.bunny.angle), this.tunnelborder.emitX = this.game.rnd.pick(
                                        [this.bunny.x - this.bunny.width / 2 + 1, this.bunny.x - this.bunny.width / 2 + 2, this.bunny.x - this.bunny.width / 2 + 3, this.bunny.x + this.bunny.width / 2 - 1, this.bunny.x + this.bunny.width / 2 - 2, this.bunny.x + this.bunny.width / 2 - 3]), this.tunnelborder.emitY = this.bunny.y, 
                                        this.bunny.health < 30 && !this.beeping ? (this.sfx.play(
                                        "beep"), 
                                this.game.time.events.add(
                                        160,
                                        function () {
                                            this.beeping = !1
                                        },
                                        this),                  
                                        this.beeping = !0) : this.beeping && this.bunny.health > 30 && (this.beeping = !1), 

                                        this.cashtext.text = this.cash + " Gold", 
                                        
                                        this.bunny.health < 0 && (this.dead = !0, 
                                                    this.bunny.playDead(), this.deathfadesprite.revive(), 
                                                    this.circle.x = this.bunny.x, this.circle.y = this.bunny.y, 
                                                    this.circle.revive(), 
       
                                        this.game.add.tween(
                                        this.deathfadesprite).
                                        to(
                                                {alpha: 1},
                                                500,
                                                null,
                                                !0), this.game.add.tween(
                                        this.circle).
                                        to(
                                                {alpha: 0},
                                                500,
                                                null,
                                                !0), this.game.add.tween(
                                        this.circle.scale).
                                        to(
                                                {x: 16},
                                                250,
                                                null,
                                                !0), this.game.add.tween(
                                        this.circle.scale).
                                        to(
                                                {y: 16},
                                                500,
                                                null,
                                                !0), this.drilldirt.kill(), this.dirtEmitter.kill(), 
 
                                        this.game.add.tween(
                                        this.cashtext).
                                        to(
                                                {alpha: 0},
                                                500,
                                                null,
                                                !0),
                                        this.game.add.tween(
                                        this.countdowntext).
                                        to(
                                                {alpha: 0},
                                                500,
                                                null,
                                                !0),
                                                
                                        this.gameover = this.game.add.text(
                                        32,
                                        160,
                                        "GAME\nOVER",
                                        {fill: "red"}), 
                                        this.gameover.font = "Press Start 2P", this.gameover.fontSize = 64, this.gameover.fixedToCamera = !0, 
 
                                        
                                        this.cashyo = this.game.add.text(
                                        32,
                                        304,
                                        "You get " + this.cash + "GOLD \n out of 3000 GOLD !\n\n" ,
                                        {fill: "white"}), this.cashyo.font = "Press Start 2P", this.cashyo.fontSize = 16, this.cashyo.fixedToCamera = !0, this.pressspace = this.game.add.text(
                                        8,
                                        340,
                                        "THANKS FOR PLAYING!",
                                        {fill: "white"}), this.pressspace.font = "Press Start 2P", this.pressspace.fontSize = 16, this.pressspace.fixedToCamera = !0, this.sfx.volume = 0, this.game.sound.remove(
                                        this.sfx), this.dfx = this.game.sound.add(
                                        "atlas"), this.dfx.volume = 1, this.dfx.addMarker(
                                        "boom",
                                        .162,
                                        .535,
                                        !0), 
                                        this.dfx.addMarker(
                                        "gameover",
                                        387.365,
                                        67.752,
                                        !0), this.dfx.play(
                                        "boom"), 
                                        this.game.time.events.add(
                                        545,
                                        function () {
                                            this.dfx.play(
                                                    "gameover")
                                        },
                                        this),
                                        function (){
                                            // **go_to_submit_result
                                            
                                            // code...
                                            
                                            // submit confirmed, go back to home
                                        } 
                                                )
                            }
                        }, generateChunk: function () {
                            var a = this.chunkGroup.add(
                                    this.game.add.group());
                            a.y = this.nextChunkY;
                            for (var b = 0, c = 0, m = 0, n = 0, o = 0;
                                    40 > o;
                                    o++) 
                                n = 0 !== o && o % 5 !== 0 ? a.children[o - 1].rightFace : this.game.rnd.integerInRange(
                                        0,
                                        1), m = o > 4 ? a.children[o - 5].bottomFace : this.chunkGroup.children.length > 1 ? this.lastChunk.children[this.lastChunk.children.length - (5 - o)].bottomFace : this.game.rnd.integerInRange(
                                        0,
                                        1), a.add(
                                        new p(
                                                this.game,
                                                b,
                                                c,
                                                n,
                                                m)), b += 64, b >= this.game.width && (b = 0, c += 64);
                            for (o = 0;
                                    d > o;
                                    o++) 
                                w(
                                        this.game,
                                        e) && this.gems.add(
                                        new r(
                                                this.game,
                                                this.game.rnd.integerInRange(
                                                        0,
                                                        320),
                                                this.game.rnd.integerInRange(
                                                        this.nextChunkY,
                                                        this.nextChunkY + 512)));
                            if (0 != this.chunkIndex) {
                                for (o = 0;
                                        f > o;
                                        o++) 
                                    if (w(
                                            this.game,
                                            g)) {
                                        var q;
                                        do
                                            q = new s(
                                                    this.game,
                                                    this.game.rnd.integerInRange(
                                                            0,
                                                            320),
                                                    this.game.rnd.integerInRange(
                                                            this.nextChunkY,
                                                            this.nextChunkY + 512));
                                        while (this.game.physics.arcade.overlap(q, this.rocks));
                                        this.rocks.add(
                                                q)
                                    }
                                for (o = 0;
                                        h > o;
                                        o++) 
                                    w(
                                            this.game,
                                            i) && this.carrots.add(
                                            new t(
                                                    this.game,
                                                    this.game.rnd.integerInRange(
                                                            0,
                                                            320),
                                                    this.game.rnd.integerInRange(
                                                            this.nextChunkY,
                                                            this.nextChunkY + 512)));
                                for (o = 0;
                                        j > o;
                                        o++) 
                                    w(
                                            this.game,
                                            k) && this.tephra.add(
                                            new u(
                                                    this.game,
                                                    this.game.rnd.integerInRange(
                                                            0,
                                                            320),
                                                    this.game.rnd.integerInRange(
                                                            this.nextChunkY,
                                                            this.nextChunkY + 512)))
                            }
                            this.nextChunkY += 512, this.lastChunkIndex = this.chunkGroup.getIndex(
                                    a), this.lastChunk = a, this.chunkIndex++, this.game.world.bounds.y = a.y - 512, this.game.camera.bounds.height += 512, this.game.physics.arcade.setBoundsToWorld(), this.bunny && this.bunny.updateSpeed(
                                    l)
                        }, collectGems: function (
                                a,
                                b) {
                            this.getEmitter.emitX = b.x, this.getEmitter.emitY = b.y, this.cash = (this.cash + b.value()) >= 3000 ? 3000 : this.cash + b.value(), this.gems.remove(
                                    b,
                                    !0), this.getEmitter.start(
                                    !0,
                                    1e3,
                                    null,
                                    25), this.sfx.play(
                                    "gem")
                        }, collectCarrot: function (
                                a,
                                b) {
                            this.getEmitter.emitX = b.x, this.getEmitter.emitY = b.y, this.carrots.remove(
                                    b,
                                    !0), this.getEmitter.start(
                                    !0,
                                    1e3,
                                    null,
                                    25), this.bunny.powerup(), this.sfx.play(
                                    "carrot")
                        }, hitRock: function (
                                a,
                                b) {
                            this.bunny.hitRock(1 === b.frame
                                    ? n : m), this.sfx.play(
                                    "ouch")
                        }, hitLava: function () {
                            this.bunny.hitRock(
                                    o), this.sfx.play(
                                    "ouch")
                        }};
                    var w = function (
                            a,
                            b) {
                        return a.rnd.realInRange(
                                0,
                                1) < b
                    };
                    b.exports = c
                }, {"../prefabs/Block.js": 2, "../prefabs/Bunny.js": 3, "../prefabs/Carrot.js": 4, "../prefabs/Gauge.js": 5, "../prefabs/Gem.js": 6, "../prefabs/Lava.js": 7, "../prefabs/Rock.js": 8}], 13: [function (
                        a,
                        b) {
                    "use strict";
                    function c() {
                        this.loadbar = null, this.ready = !1, this.waiting = !1
                    }
                    c.prototype = {preload: function () {
                            this.loadbar = this.add.sprite(
                                    60,
                                    0,
                                    "preloader"), this.loadbar.anchor.setTo(
                                    0,
                                    .5), this.loadbar.y = this.game.height / 2, this.load.onLoadComplete.addOnce(
                                    this.onLoadComplete,
                                    this), this.load.setPreloadSprite(
                                    this.loadbar), this.load.atlas(
                                    "images",
                                    "assets/atlas.png",
                                    "assets/atlas.json"), this.load.audio(
                                    "atlas",
                                    ["assets/atlas.ogg", "assets/atlas.mp3"],
                                    !0)
                        }, create: function () {
                            this.loadbar.cropEnabled = !1
                        }, update: function () {
                            this.ready && !this.waiting && (this.game.time.events.add(
                                    1e3,
                                    function () {
                                        this.game.state.start(
                                                "menu")
                                    },
                                    this), this.game.add.tween(
                                    this.loadbar).
                                    to(
                                            {alpha: 0},
                                            1e3,
                                            Phaser.Easing.Quadratic.InOut,
                                            !0), this.waiting = !0)
                        }, onLoadComplete: function () {
                            this.ready = !0
                        }}, b.exports = c
                }, {}]},
        {},
        [1]);